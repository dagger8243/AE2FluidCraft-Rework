/*
 * Add your dependencies here. Supported configurations:
 *  - api("group:name:version:classifier"): if you use the types from this dependency in the public API of this mod
 *       Available at runtime and compiletime for mods depending on this mod
 *  - implementation("g:n:v:c"): if you need this for internal implementation details of the mod, but none of it is visible via the public API
 *       Available at runtime but not compiletime for mods depending on this mod
 *  - compileOnly("g:n:v:c"): if the mod you're building doesn't need this dependency during runtime at all, e.g. for optional mods
 *       Not available at all for mods depending on this mod, only visible at compiletime for this mod
 *  - compileOnlyApi("g:n:v:c"): like compileOnly, but also visible at compiletime for mods depending on this mod
 *       Available at compiletime but not runtime for mods depending on this mod
 *  - runtimeOnlyNonPublishable("g:n:v:c"): if you want to include a mod in this mod's runClient/runServer runs, but not publish it as a dependency
 *       Not available at all for mods depending on this mod, only visible at runtime for this mod
 *  - devOnlyNonPublishable("g:n:v:c"): a combination of runtimeOnlyNonPublishable and compileOnly for dependencies present at both compiletime and runtime,
 *       but not published as Maven dependencies - useful for RFG-deobfuscated dependencies or local testing
 *  - runtimeOnly("g:n:v:c"): if you don't need this at compile time, but want it to be present at runtime
 *       Available at runtime for mods depending on this mod
 *  - annotationProcessor("g:n:v:c"): mostly for java compiler plugins, if you know you need this, use it, otherwise don't worry
 *  - testCONFIG("g:n:v:c") - replace CONFIG by one of the above (except api), same as above but for the test sources instead of main
 *
 *  - shadowImplementation("g:n:v:c"): effectively the same as API, but the dependency is included in your jar under a renamed package name
 *       Requires you to enable usesShadowedDependencies in gradle.properties
 *
 *  - compile("g:n:v:c"): deprecated, replace with "api" (works like the old "compile") or "implementation" (can be more efficient)
 *
 * You can exclude transitive dependencies (dependencies of the chosen dependency) by appending { transitive = false } if needed,
 * but use this sparingly as it can break using your mod as another mod's dependency if you're not careful.
 *
 * To depend on obfuscated jars you can use `devOnlyNonPublishable(rfg.deobf("dep:spec:1.2.3"))` to fetch an obfuscated jar from maven,
 * or `devOnlyNonPublishable(rfg.deobf(project.files("libs/my-mod-jar.jar")))` to use a file.
 *
 * Gradle names for some of the configuration can be misleading, compileOnlyApi and runtimeOnly both get published as dependencies in Maven, but compileOnly does not.
 * The buildscript adds runtimeOnlyNonPublishable to also have a runtime dependency that's not published.
 *
 * For more details, see https://docs.gradle.org/8.0.1/userguide/java_library_plugin.html#sec:java_library_configurations_graph
 */
dependencies {
    api('com.github.GTNewHorizons:NotEnoughItems:2.6.38-GTNH:dev')
    api('com.github.GTNewHorizons:Applied-Energistics-2-Unofficial:rv3-beta-459-GTNH:dev')
    api('curse.maven:cofh-core-69162:2388751')
    api('com.github.GTNewHorizons:waila:1.8.1:dev')
    api('com.github.GTNewHorizons:ModularUI2:2.1.8-1.7.10:dev')

    implementation("com.github.GTNewHorizons:WirelessCraftingTerminal:1.11.6:dev")

    compileOnly("com.github.GTNewHorizons:GTNHLib:0.5.11:dev") { transitive = false }
    compileOnly('com.github.GTNewHorizons:Baubles-Expanded:2.0.2:dev')
    compileOnly('com.github.GTNewHorizons:ExtraCells2:2.5.35:dev') { transitive = false }
    compileOnly('com.github.GTNewHorizons:ForestryMC:4.9.16:dev')
    compileOnly('com.github.GTNewHorizons:EnderIO:2.8.17:dev')
    compileOnly('com.github.GTNewHorizons:GT5-Unofficial:5.09.49.107:dev') {
        exclude group: 'com.github.GTNewHorizons', module: 'AE2FluidCraft-Rework'
    }

    compileOnly('thaumcraft:Thaumcraft:1.7.10-4.2.3.5:dev')
    compileOnly('com.gregoriust.gregtech:gregtech_1.7.10:6.14.23:dev') { transitive = false }
    compileOnly('com.github.GTNewHorizons:OpenComputers:1.10.23-GTNH:dev') { transitive = false }
    compileOnly('com.github.GTNewHorizons:ThaumicEnergistics:1.6.25-GTNH:dev') { transitive = false }
    compileOnly("com.github.GTNewHorizons:Hodgepodge:2.5.62:dev") { transitive = false }

    runtimeOnlyNonPublishable("com.github.GTNewHorizons:DuraDisplay:1.3.4:dev")
	runtimeOnlyNonPublishable("com.github.GTNewHorizons:GTNHLib:0.5.11:dev")
}
